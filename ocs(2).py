# -*- coding: utf-8 -*-
"""ocs

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tKOyZfczRw8Kq1YTHd2k6TJUNdkNS6AH
"""

import numpy as np
from solve_linear_program import solve_linear_program

def sample_unit_sphere(n):
    vec = np.random.randn(3, n)
    vec = vec / np.linalg.norm(vec, axis=0)
    return vec.T

def compute_ocs(obs_resp, illum, res=100):

    cs_map = (obs_resp.T * illum).T
    ocs_extr = []
    for direction in sample_unit_sphere(res):
        direction_mod = direction
        psi_F = cs_map @ direction_mod
        refl_min, refl_max = solve_linear_program(of_cfs=psi_F, bounds=(0,1))
        cs_min = cs_map.T @ refl_min
        cs_max = cs_map.T @ refl_max
        ocs_extr = ocs_extr + [cs_min, cs_max]
    scale_factor = np.max(obs_resp.T @ illum)

    return [p/scale_factor for p in ocs_extr]